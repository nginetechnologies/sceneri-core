cmake_minimum_required (VERSION 3.14)

include("${ENGINE_CMAKE_DIRECTORY}/MakePlugin.cmake")

MakePlugin(4732DB7A-619B-421E-8569-BF31F607BBB7 ${CMAKE_CURRENT_LIST_DIR} "HTTP" "lib" "bin" "../HTTP.nplugin")

if(PLATFORM_WINDOWS)
	target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/lib/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE}/libcurl${CMAKE_STATIC_LIBRARY_SUFFIX}")

	target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "crypt32")
	target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "Ws2_32.lib")
	target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "Wldap32.lib")

	target_include_directories(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/include")
	target_compile_definitions(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE USE_LIBCURL=1)
elseif(PLATFORM_APPLE)
	target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "-framework Foundation -framework Security")

	if (PLATFORM_APPLE_MACOS)
		target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/lib/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE}/${CMAKE_STATIC_LIBRARY_PREFIX}curl${CMAKE_STATIC_LIBRARY_SUFFIX}")
		
		target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "-framework SystemConfiguration")
	else()
		target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/lib/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE}/libcurl${CMAKE_STATIC_LIBRARY_SUFFIX}")
	endif()

	target_include_directories(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/include")
	target_compile_definitions(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE USE_LIBCURL=1)
elseif(PLATFORM_ANDROID)
	target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/lib/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE}/${CMAKE_STATIC_LIBRARY_PREFIX}curl${CMAKE_STATIC_LIBRARY_SUFFIX}")
	target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/lib/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE}/${CMAKE_STATIC_LIBRARY_PREFIX}ssl${CMAKE_STATIC_LIBRARY_SUFFIX}")
	target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/lib/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE}/${CMAKE_STATIC_LIBRARY_PREFIX}crypto${CMAKE_STATIC_LIBRARY_SUFFIX}")

	target_include_directories(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/include")
	target_compile_definitions(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE USE_LIBCURL=1)
elseif(PLATFORM_LINUX)
	find_package(CURL REQUIRED)
	target_link_libraries(Renderer PRIVATE ${CURL_LIBRARIES})

	target_include_directories(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/include")
	target_compile_definitions(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE USE_LIBCURL=1)
elseif(PLATFORM_EMSCRIPTEN)
	target_compile_definitions(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE USE_LIBCURL=0)
else()
	target_link_libraries(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/lib/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE}/libcurl${CMAKE_STATIC_LIBRARY_SUFFIX}")

	target_include_directories(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE "${CMAKE_CURRENT_LIST_DIR}/Private/3rdparty/curl/include")
	target_compile_definitions(4732DB7A-619B-421E-8569-BF31F607BBB7 PRIVATE USE_LIBCURL=1)
endif()
