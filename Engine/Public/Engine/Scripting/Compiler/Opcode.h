#pragma once

#include <Common/Math/CoreNumericTypes.h>

namespace ngine::Scripting
{
	enum class OpCode : uint8
	{
		Nop = 0, // 0x90,
		Null,
		True,
		False,
		PushConstant,
		PushImmediate,
		JumpIfFalse,
		JumpIfTrue,
		Pop,
		Return,
		CallNative,
		CallClosure,
		Jump,

		// Float operations
		NegateFloat,
		AddFloat,
		SubtractFloat,
		MultiplyFloat,
		DivideFloat,
		LogicalNotFloat,
		LessFloat,
		LessFloat4,
		LessEqualFloat,
		LessEqualFloat4,
		GreaterFloat,
		GreaterFloat4,
		GreaterEqualFloat,
		GreaterEqualFloat4,
		NotEqualFloat,
		NotEqualFloat4,
		EqualEqualFloat,
		EqualEqualFloat4,
		ModuloFloat,
		AbsFloat,
		AcosFloat,
		AsinFloat,
		AtanFloat,
		Atan2Float,
		CeilFloat,
		CubicRootFloat,
		CosFloat,
		RadiansToDegreesFloat,
		ExpFloat,
		FloorFloat,
		FractFloat,
		InverseSqrtFloat,
		LogFloat,
		Log2Float,
		Log10Float,
		MaxFloat,
		MinFloat,
		RoundFloat,
		MultiplicativeInverseFloat,
		PowerFloat,
		Power2Float,
		Power10Float,
		DegreesToRadiansFloat,
		RandomFloat,
		SignFloat,
		SignNonZeroFloat,
		SinFloat,
		SqrtFloat,
		TanFloat,
		TruncateFloat,
		AreNearlyEqualFloat,

		// Integral operations
		NegateInteger,
		AddInteger,
		SubtractInteger,
		MultiplyInteger,
		DivideInteger,
		LogicalNotInteger,
		TruthyNotInteger,
		FalseyNotInteger,
		BitwiseNotInteger,
		LessInteger,
		LessInteger4,
		LessEqualInteger,
		LessEqualInteger4,
		GreaterInteger,
		GreaterInteger4,
		GreaterEqualInteger,
		GreaterEqualInteger4,
		NotEqualInteger,
		NotEqualInteger4,
		EqualEqualInteger,
		EqualEqualInteger4,
		LeftShiftInteger,
		RightShiftInteger,
		ModuloInteger,
		AndInteger,
		OrInteger,
		ExclusiveOrInteger,
		AbsInteger,
		MaxInteger,
		MinInteger,
		RandomInteger,

		LengthInteger2,
		LengthInteger3,
		LengthInteger4,
		LengthSquaredInteger2,
		LengthSquaredInteger3,
		LengthSquaredInteger4,

		// String operations
		LessString,
		LessEqualString,
		GreaterString,
		GreaterEqualString,
		NotEqualString,
		EqualEqualString,

		// Boolean operations
		LogicalNotBoolean,
		AnyBoolean2,
		AnyBoolean3,
		AnyBoolean4,
		AllBoolean2,
		AllBoolean3,
		AllBoolean4,

		// Vector operations
		Dot2,
		Dot3,
		Dot4,
		Cross2,
		Cross3,
		LengthFloat2,
		LengthFloat3,
		LengthFloat4,
		LengthSquaredFloat2,
		LengthSquaredFloat3,
		LengthSquaredFloat4,
		InverseLengthFloat2,
		InverseLengthFloat3,
		InverseLengthFloat4,
		DistanceInteger2,
		DistanceInteger3,
		DistanceFloat2,
		DistanceFloat3,
		Normalize2,
		Normalize3,
		Normalize4,
		Project2,
		Project3,
		Reflect2,
		Reflect3,
		Refract2,
		Refract3,

		// Rotation operations
		RightRotationDirection3,
		ForwardRotationDirection2,
		ForwardRotationDirection3,
		UpRotationDirection2,
		UpRotationDirection3,
		RotateRotation2,
		RotateRotation3,
		InverseRotateRotation2,
		InverseRotateRotation3,
		RotateDirection2,
		RotateDirection3,
		InverseRotateDirection2,
		InverseRotateDirection3,
		InverseRotation2,
		InverseRotation3,
		NegateRotation3,
		RotationEuler3,

		PushGlobal,
		SetGlobal,
		PushLocal,
		SetLocal,
		PushClosure,
		PushUpvalue,
		SetUpvalue,
		CloseUpvalue,

		//! Similar to PushConstant, but resolves a soft reference to a pointer
		//! This expects that the resolving will succeed, and will terminate function execution if it fails
		//! Used for known components from scene explorer and more - in dynamic cases the user must explicitly resolve soft references
		PushComponentSoftReference,
	};
}
