#version 450
#extension GL_EXT_samplerless_texture_functions : enable

layout(binding = 0) uniform texture2D inputImage;
layout(binding = 1) uniform writeonly image2D outputImage;
layout(binding = 2) uniform sampler bilinearSampler;

layout(local_size_x=8, local_size_y=8) in;

void main()
{
	// SSAO
	ivec2 res = textureSize(inputImage, 0);
	ivec2 index = ivec2(gl_GlobalInvocationID.xy);
	vec2 uv = vec2(index) / vec2(res);
	vec2 inTexCoord = uv;

	const int blurRange = 2;
	int n = 0;
	vec2 texelSize = 1.0 / vec2(textureSize(inputImage, 0));
	float ssao = 0.0;
	for (int x = -blurRange; x < blurRange; x++)
	{
		for (int y = -blurRange; y < blurRange; y++)
		{
			vec2 offset = vec2(float(x), float(y)) * texelSize;
			ssao += textureLod(sampler2D(inputImage, bilinearSampler), inTexCoord + offset, 0.0).r;
			n++;
		}
	}

	ssao = ssao / float(n);

	// ssao = ssao * ssao; //increase SSAO contrast

	imageStore( outputImage, index, vec4(ssao, 0.0, 0.0, 1.0));
}
